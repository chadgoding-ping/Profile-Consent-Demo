apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f Compose/docker-compose.yaml --volumes configMap
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: pingaccess
  name: pingaccess
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: pingaccess
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f Compose/docker-compose.yaml --volumes configMap
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.service: pingaccess
    spec:
      containers:
      - env:
        - name: HTTPS_PORT
          valueFrom:
            configMapKeyRef:
              key: HTTPS_PORT
              name: env-vars
        - name: PF_LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              key: PF_LOG_LEVEL
              name: env-vars
        - name: PF_USER_PWD
          valueFrom:
            configMapKeyRef:
              key: PF_USER_PWD
              name: env-vars
        - name: PING_IDENTITY_ACCEPT_EULA
          valueFrom:
            configMapKeyRef:
              key: PING_IDENTITY_ACCEPT_EULA
              name: env-vars
        - name: REST_API_HOSTNAME
          valueFrom:
            configMapKeyRef:
              key: REST_API_HOSTNAME
              name: env-vars
        - name: USER_BASE_DN
          valueFrom:
            configMapKeyRef:
              key: USER_BASE_DN
              name: env-vars
        image: pingidentity/pingaccess:latest
        imagePullPolicy: ""
        name: pingaccess
        ports:
        - containerPort: 8080
        - containerPort: 3000
        - containerPort: 9000
        resources: {}
        volumeMounts:
        - mountPath: /run/secrets/devops-secret
          name: devops-secret
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: devops-secret
        secret:
          items:
          - key: devops-secret
            path: devops-secret
          secretName: devops-secret
status: {}
